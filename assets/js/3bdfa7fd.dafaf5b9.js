"use strict";(self.webpackChunktrustification_io=self.webpackChunktrustification_io||[]).push([[2652],{4185:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>l});var i=t(4307),s=t(4848),a=t(8453);const c={title:"How to Configure a Gitsign Cache",authors:"danbev",tags:["sigstore"]},r=void 0,o={authorsImageUrls:[void 0]},l=[];function g(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["This post contains the steps for setting up\n",(0,s.jsx)(n.a,{href:"https://github.com/sigstore/gitsign/tree/main/cmd/gitsign-credential-cache",children:"gitsign-credential-cache"}),".\nwhich is useful if one has to perform multiple commits in short succession, or\nwhen doing a rebase."]}),"\n",(0,s.jsx)(n.p,{children:"It can be somewhat frustrating to have the browser open for every single\ncommit. For these situations a cache can be enabled using the instructions in\nthis post."}),"\n",(0,s.jsxs)(n.p,{children:["First install ",(0,s.jsx)(n.code,{children:"gitsign-credential-cache"})," if it is not already installed:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"$ go install github.com/sigstore/gitsign/cmd/gitsign-credential-cache@latest\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Create a file named ",(0,s.jsx)(n.code,{children:"~/.config/systemd/user/gitsign.service"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"[Unit]\nDescription=Gitsign Credentials Cache\nDocumentation=https://github.com/sigstore/gitsign\n\n[Service]\nType=simple\nExecStart=%h/go/bin/gitsign-credential-cache\n\nRestart=on-failure\n\n[Install]\nWantedBy=default.target\n"})}),"\n",(0,s.jsx)(n.p,{children:"This service can then be enabled using:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"$ systemctl --user daemon-reload\n$ systemctl --user enable gitsign.service\nCreated symlink /home/danielbevenius/.config/systemd/user/default.target.wants/gitsign.service \u2192 /home/danielbevenius/.config/systemd/user/gitsign.service.\n"})}),"\n",(0,s.jsx)(n.p,{children:"And we can start it manually using:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"$ systemctl --user start gitsign.service\n"})}),"\n",(0,s.jsx)(n.p,{children:"Check that it has started successfully:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"$ systemctl --user status gitsign.service\n\u25cf gitsign.service - Gitsign Credentials Cache\n     Loaded: loaded (/home/danielbevenius/.config/systemd/user/gitsign.service; enabled; vendor preset: disabled)\n     Active: active (running) since Mon 2022-11-28 11:27:47 CET; 2min 35s ago\n       Docs: https://github.com/sigstore/gitsign\n   Main PID: 177444 (gitsign-credent)\n     CGroup: /user.slice/user-1000.slice/user@1000.service/app.slice/gitsign.service\n             \u2514\u2500 177444 /home/danielbevenius/go/bin/gitsign-credential-cache\n\nNov 28 11:27:47 localhost.localdomain systemd[1295]: Started Gitsign Credentials Cache.\nNov 28 11:27:47 localhost.localdomain gitsign-credential-cache[177444]: /home/danielbevenius/.cache/.sigstore/gitsig>\n"})}),"\n",(0,s.jsx)(n.p,{children:"And we then need to add the following environment variable:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"$ export GITSIGN_CREDENTIAL_CACHE=~/.cache/.sigstore/gitsign/cache.sock\n"})}),"\n",(0,s.jsx)(n.p,{children:'After this we should be able to commit a first time and have our credentials\nstored. Subsequent commits will then be made without a browser "popup".'})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}},4307:e=>{e.exports=JSON.parse('{"permalink":"/blog/2022/12/05/gitsign-cache","editUrl":"https://github.com/trustification/trustification.github.io/tree/main/blog/2022-12-05-gitsign-cache.md","source":"@site/blog/2022-12-05-gitsign-cache.md","title":"How to Configure a Gitsign Cache","description":"This post contains the steps for setting up","date":"2022-12-05T00:00:00.000Z","tags":[{"inline":true,"label":"sigstore","permalink":"/blog/tags/sigstore"}],"readingTime":1.54,"hasTruncateMarker":true,"authors":[{"name":"Daniel Bevenius","title":"Maintainer","url":"https://github.com/danbev","imageURL":"https://github.com/danbev.png","key":"danbev","page":null}],"frontMatter":{"title":"How to Configure a Gitsign Cache","authors":"danbev","tags":["sigstore"]},"unlisted":false,"prevItem":{"title":"An Adventure with the CycloneDX Maven Plugin","permalink":"/blog/2022/12/09/cyclonedx-maven-plugin-adventure"},"nextItem":{"title":"Keyless Git Signing with Sigstore","permalink":"/blog/2022/12/02/sign-commits-with-sigstore"}}')},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var i=t(6540);const s={},a=i.createContext(s);function c(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);