"use strict";(self.webpackChunktrustification_io=self.webpackChunktrustification_io||[]).push([[1753],{9732:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var o=n(4848),a=n(8453);const r={title:"The CycloneDX Maven Aggregate SBOM and why you shouldn't trust it (yet)",authors:"kevinconner",tags:["cyclonedx"]},i=void 0,s={permalink:"/blog/2023/03/20/cyclonedx-maven-aggregate-bom-why-not-to-trust",editUrl:"https://github.com/trustification/trustification.github.io/tree/main/blog/2023-03-20-cyclonedx-maven-aggregate-bom-why-not-to-trust.md",source:"@site/blog/2023-03-20-cyclonedx-maven-aggregate-bom-why-not-to-trust.md",title:"The CycloneDX Maven Aggregate SBOM and why you shouldn't trust it (yet)",description:"Over the last few months I've spent a lot of time with the CycloneDX Maven Plugin, trying to prove it is suitable for us to use as part of securing the Software Supply Chain. I've discovered and fixed a number of issues, related to the generation of an SBOM for each project using the makeBom goal, and have now turned my focus to aggregates and the makeAggregateBom goal.",date:"2023-03-20T00:00:00.000Z",tags:[{inline:!0,label:"cyclonedx",permalink:"/blog/tags/cyclonedx"}],readingTime:12.945,hasTruncateMarker:!0,authors:[{name:"Kevin Conner",title:"Maintainer",url:"https://github.com/knrc",imageURL:"https://github.com/knrc.png",key:"kevinconner"}],frontMatter:{title:"The CycloneDX Maven Aggregate SBOM and why you shouldn't trust it (yet)",authors:"kevinconner",tags:["cyclonedx"]},unlisted:!1,nextItem:{title:"in-toto attestations",permalink:"/blog/2023/03/13/in-toto-attestations"}},c={authorsImageUrls:[void 0]},u=[];function l(e){const t={a:"a",code:"code",p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(t.p,{children:["Over the last few months I've spent a lot of time with the ",(0,o.jsx)(t.a,{href:"https://github.com/CycloneDX/cyclonedx-maven-plugin",title:"The CycloneDX Maven Plugin GitHub repository",children:"CycloneDX Maven Plugin"}),", trying to prove it is suitable for us to use as part of securing the Software Supply Chain. I've discovered and fixed a number of issues, related to the generation of an SBOM for each project using the ",(0,o.jsx)(t.code,{children:"makeBom"})," goal, and have now turned my focus to aggregates and the ",(0,o.jsx)(t.code,{children:"makeAggregateBom"})," goal."]})}function g(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var o=n(6540);const a={},r=o.createContext(a);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);